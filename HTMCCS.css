body {
  background: url("https://static.vecteezy.com/ti/vecteur-libre/p3/1966689-abstrait-futuriste-fond-technologie-science-fiction-concept-vectoriel.jpg") center/cover;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
  height: 98vh;
  opacity: 1;
  overflow: hidden;
  z-index: 3;
}

/* .body2 {
  background-image: url("https://preview.redd.it/rk2ly8cspmb51.jpg?width=1920&format=pjpg&auto=webp&s=91400a0976b41c42daf966a9526251fca4328ea2");
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
  height: 98vh;
  opacity: 1;
  overflow: hidden;
  z-index: 3;
} */

.body3 {
  background: url("https://static.vecteezy.com/ti/vecteur-libre/p3/2623583-abstrait-noir-forme-geometrique-fond-avec-ligne-diagonale-texture-design-pour-presentation-banniere-couverture-web-flyer-card-poster-game-texture-slide-and-powerpoint-vector-illustration-vectoriel.jpg") center/cover;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
  height: 98vh;
  opacity: 1;
  overflow: hidden;
  z-index: 3;
}

.bodyJ {
    background: url("https://wallpaperaccess.com/full/5588900.jpg") center/cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: cover;
    height: 98vh;
    opacity: 1;
    overflow: hidden;
    z-index: 3;
}
  
.container {
    height: 10vh;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
  
.menu {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 33.3%;
    margin-top: 50rem;
    margin-bottom: 1.25rem;
}
  
.menu-options {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 33.3%;
}
.menu-options .btn-minecraft:first-child {
    margin-right: 10px;
}
.btn-minecraft {
    background: #727272;
    color: rgb(247, 247, 247);
    width: 100%;
    padding: .5rem 0;
    margin-bottom: .75rem;
    text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.8);
    font-size: 1.5rem;
    letter-spacing: .025em;
    border: 2px solid rgba(0, 0, 0, 1);
    box-shadow: inset 3px 3px 0 rgba(255, 255, 255, 0.5),
                inset -3px -3px 0 rgba(0, 0, 0, 0.5);
    cursor: pointer;
}
.btn-minecraft:hover {
    background: rgba(115, 107, 221, 1);
}
.btn-minecraft:focus {
    color: rgb(246, 246, 44);
    outline: none;
}




::selection {
    text-decoration: transparent;
    color: rgba(126, 126, 126, 0.842);
}

main {
    background-color: rgba(12, 12, 12, 0.767);
    height: 8%;
}
#hr {
    position: relative;
    margin-top: 0%;
}

#accueil {
    background-color:rgb(179, 179, 179);
    text-decoration:black;
    width: 100px; height: 18mm;
    font-size: 20px;
    position: absolute;
    text-align: center;
    border-width: 0mm;
    border-right-width: 0.5mm; border-right-color: rgba(32, 32, 32, 0.411);
    color:rgb(37, 37, 37);
    margin: 0px 0px;
    cursor: pointer;
    display: inline-block;
    transition: 0.5s;
}
#accueil:hover {
    background-color: rgba(105, 104, 104, 0.521);
}
#accueil2 {
    background-color:rgba(241, 13, 13, 0.63);
    text-decoration:black;
    width: 100px; height: 18mm;
    font-size: 20px;
    position: absolute;
    text-align: center;
    border-width: 0mm;
    border-right-width: 0.5mm; border-right-color: rgba(32, 32, 32, 0.411);
    color:rgb(37, 37, 37);
    margin: 0px 0px;
    cursor: pointer;
}
#accueil2:hover {
    background-color: rgba(105, 104, 104, 0.521);
}

#jeux {
    width: 100px; height: 18mm;
    background-color:rgb(179, 179, 179);
    text-decoration:black;
    font-size: 20px;
    border-width: 0mm;
    border-right-width: 0.5mm; border-right-color: rgba(32, 32, 32, 0.411);
    text-align: center;
    position: absolute;
    margin: 0px 100px;
    cursor: pointer;
}
#jeux:hover {
    background-color: rgba(105, 104, 104, 0.521);
}
#jeux2 {
    width: 100px; height: 18mm;
    background-color:rgba(241, 13, 13, 0.63);
    text-decoration:black;
    font-size: 20px;
    border-width: 0mm;
    border-right-width: 0.5mm; border-right-color: rgba(32, 32, 32, 0.411);
    text-align: center;
    position: absolute;
    margin: 0px 100px;
    cursor: pointer;
}
#jeux2:hover {
    background-color: rgba(105, 104, 104, 0.521);
}

#projet {
    width: 100px; height: 18mm;
    background-color:rgb(179, 179, 179);
    text-decoration:black;
    font-size: 20px;
    border-width: 0mm;
    border-right-width: 0.5mm; border-right-color: rgba(32, 32, 32, 0.411);
    text-align: center;
    position: absolute;
    margin: 0px 200px;
    cursor: pointer;
}
#projet:hover {
    background-color: rgba(105, 104, 104, 0.521);
}
#projet2 {
    width: 100px; height: 18mm;
    background-color:rgba(241, 13, 13, 0.63);
    text-decoration:black;
    font-size: 20px;
    border-width: 0mm;
    border-right-width: 0.5mm; border-right-color: rgba(32, 32, 32, 0.411);
    text-align: center;
    position: absolute;
    margin: 0px 200px;
    cursor: pointer;
}
#projet2:hover {
    background-color: rgba(105, 104, 104, 0.521);
}
#contact {
    width: 100px; height: 18mm;
    background-color:rgba(179, 179, 179);
    text-decoration:black;
    font-size: 20px;
    border-width: 0mm;
    border-right-width: 0.5mm; border-right-color: rgba(32, 32, 32, 0.411);
    text-align: center;
    position: absolute;
    margin: 0px 300px;
    cursor: pointer;
}
#contact:hover {
    background-color: rgba(105, 104, 104, 0.521);
}
#contact2 {
    width: 100px; height: 18mm;
    background-color:rgba(241, 13, 13, 0.63);
    text-decoration:black;
    font-size: 20px;
    border-width: 0mm;
    border-right-width: 0.5mm; border-right-color: rgba(32, 32, 32, 0.411);
    text-align: center;
    position: absolute;
    margin: 0px 300px;
    cursor: pointer;
}
#contact2:hover {
    background-color: rgba(105, 104, 104, 0.521);
}

#scearch {
    border-radius: 10px;
    border-color: rgba(153, 15, 15, 0.829);
    border-top-width: .8mm;
    border-left-width: 1.3mm;
    position: absolute;
    margin: 1.3% 76%;
    width: 13%; height: 7mm;
    background-color: rgb(31, 29, 29);
    text-align-last: left;
    color: white;
}

#logo {
  width: 5.5%;
  position: absolute;
  margin-left: 90.5%;
  margin-top: -0.6%;
  animation-duration: 3s;
  animation-name: logoA;
  z-index: 3;
}


/* Animation keyframes - you need to add prefixes */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}


/* Loading animation container
.loading {
  position: absolute;
  top: 50%;
  left: 93.5%;
  width: 28px;
  height: 28px;
  margin: -14px 0 0 -14px;
  visibility: hidden;
  animation-duration: 3ms;
  animation-name: spin2;
  z-index: 1;
}
@keyframes spin2 {
  0% {
    visibility: visible;
  }
  100% {
    visibility: initial;
  }
}

/* Spinning circle (inner circle) */
/* .loading .maskedCircle {
  width: 20px;
  height: 20px;
  border-radius: 12px;
  border: 3px solid white;
} */

/* Spinning circle mask */
/* .loading .mask {
  width: 12px;
  height: 12px;
  overflow: hidden;
} */

/* Spinner */
/* .loading .spinner {
  position: absolute;
  left: 1px;
  top: 1px;
  width: 26px;
  height: 26px;
  animation: spin 1s infinite linear;
}

@keyframes logoA {
  0% {
    visibility: hidden;
  }
  99% {
    visibility: hidden;
  }
  100% {
    visibility: visible;
  }
} */


.pseudotxt {
  position: relative;
  text-align: center;
  top: 5%;
  right: 1%;
  text-shadow: 10px 10px 4px rgba(53, 53, 53, 0.815);
  font-size: 80px;
  font-family: American Typewriter, serif;
}

.sondageB {
  position: absolute;
  top: 48%;
  left: 72%;
  width: 15%;
  height: 8%;
  background-color: #4d4d4d;
  color: white;
  border-radius: 25px;
  border-color: #e5e5e6;
  border-width: 3px;
  font-size: 18px;
}
.sondageB:hover {
  cursor: pointer;
  background-color: rgba(0, 0, 0, 0.685);
  color: rgba(255, 255, 255, 0.884);
  border-color: red;
}

#bordure {
  position: absolute;
  margin-top: -35%;
  margin-left: 30%;
  width: 35%;
  height: 75%;
  border: 2px solid red;
  background-color: rgb(27, 27, 27);
  padding: 1px;
}

.paint {
  position: absolute;
  margin: -30% 37%;
  color: #dfdfdf;
}
.snake {
    position: absolute;
    margin: -26% 37%;
    color: rgb(223, 223, 223);
}
.pong {
  position: absolute;
  margin: -22% 37%;
  color: rgb(223, 223, 223);
}
.game2048 {
  position: absolute;
  margin: -18% 37%;
  color: rgb(223, 223, 223);
}
.minecraftMod {
  position: absolute;
  margin: -14% 37%;
  color: rgb(223, 223, 223);
}
.FPS_game {
  position: absolute;
  margin: -10% 37%;
  color: rgb(223, 223, 223);
}

#paint {
  position: absolute;
  margin: -30% 35%;
  font-size: 25px;
}
#snake {
  position: absolute;
  margin: -26% 35%;
  font-size: 25px;
  color: rgba(0, 255, 234, 0.87);
}
#pong {
  position: absolute;
  margin: -22% 35%;
  font-size: 25px;
  color: rgba(233, 11, 11, 0.87);
}
#game2048 {
  position: absolute;
  margin: -18% 35%;
  font-size: 25px;
  color: rgba(115, 11, 233, 0.87);
}
#minecraftMod {
  position: absolute;
  margin: -14% 35%;
  font-size: 25px;
  color: rgba(0, 255, 21, 0.87);
}
#FPS_game {
  position: absolute;
  margin: -10% 35%;
  font-size: 25px;
  color: rgba(73, 73, 73, 0.87);
}






.reseaux {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 50%;
    position: relative;
    display: flex;
    margin-top: -35%;
}
.reseaux {
    position: relative;
    display: flex;
}
.reseaux li {
    list-style: none;
}
.reseaux li a {
    position: relative;
    display: inline-block;
    width: 120px;
    height: 120px;
    background: black;
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    border-radius: 10px;
    text-decoration: none;
    margin: 100px;
    transform-style: preserve-3d;
    perspective: 500px;
    box-shadow: 0 25px 35px black;
}
.js-tilt-glare {
    border-radius: 10%;
}
.reseaux li::before {
    content: attr(data-text);
    position: absolute;
    top: 25%;
    left: 50%;
    transform: translate(-50%,calc(-75% + 150%));
    font-size: 14vw;
    pointer-events: none;
    font-weight: 700;
    transition: 0.5s;
    opacity: 0;
    color: rgb(255, 255, 255);
}
.reseaux li:hover::before {
    opacity: 0.8;
    transform: translate(-50%,calc(-50% + 120%));
}
.reseaux li a:hover.twitter{
    background: rgb(29, 48, 224);
}
.reseaux li a:hover.instagram{
    background: rgb(248, 102, 35);
}
.reseaux li a:hover.youtube{
    background: rgb(219, 12, 12);
}
.reseaux li a:hover.github{
    background: rgb(165, 158, 158);
}
.reseaux li a .fa{
    transition: 0.25s;
    pointer-events: none;
    font-size: 4em;
}
.reseaux li a:hover .fa{
    color: rgb(0, 0, 0);
    transform: scale(1.5) translateZ(50px);
}






/* .ball {
    display: inline-block;
    width: 100%;
    height: 100%;
    margin: 0;
    border-radius: 50%;
    position: relative;
    -webkit-transform-style: preserve-3d;
    background: url('http://hop.ie/balls/images/world-map-one-color.png') repeat-x;
    background-size: auto 100%;
    -webkit-animation: move-map 30s infinite linear;
    -moz-animation: move-map 30s infinite linear;
    -o-animation: move-map 30s infinite linear;
    -ms-animation: move-map 30s infinite linear;
    animation: move-map 30s infinite linear;
}
  
.ball:before {
    content: "";
    position: absolute;
    top: 0%;
    left: 0%;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    box-shadow: -40px 10px 70px 10px rgba(0,0,0,0.5) inset;
    z-index: 2;
}
  
.ball:after {
    content: "";
    position: absolute;
    border-radius: 50%;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    -webkit-filter: blur(0);
    opacity: 0.3;
    background: radial-gradient(circle at 50% 80%, #81e8f6, #76deef 10%, #055194 66%, #062745 100%);
}
  
.ball .shadow {
    position: absolute;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at 50% 50%, rgba(0, 0, 0, 0.801), rgba(0, 0, 0, 0.247) 40%, rgba(0, 0, 0, 0) 50%);
    -webkit-transform: rotateX(90deg) translateZ(-150px);
    -moz-transform: rotateX(90deg) translateZ(-150px);
    -ms-transform: rotateX(90deg) translateZ(-150px);
    -o-transform: rotateX(90deg) translateZ(-150px);
    transform: rotateX(90deg) translateZ(-150px);
    z-index: -1;
}
  
.stage {
    width: 300px;
    height: 300px;
    display: inline-block;
    margin: 20px;
    -webkit-perspective: 1200px;
    -moz-perspective: 1200px;
    -ms-perspective: 1200px;
    -o-perspective: 1200px;
    perspective: 1200px;
    -webkit-perspective-origin: 50% 50%;
    -moz-perspective-origin: 50% 50%;
    -ms-perspective-origin: 50% 50%;
    -o-perspective-origin: 50% 50%;
    perspective-origin: 50% 50%;
}
  
@-moz-keyframes move-map {
    0% {
      background-position: -849px 0; }
  
    100% {
      background-position: 0 0; } }
  
@-webkit-keyframes move-map {
    0% {
      background-position: 0 0; }
    100% {
      background-position: -849px 0; }
}
  
  
@-o-keyframes move-map {
    0% {
      background-position: -849px 0; }
  
    100% {
      background-position: 0 0; } }
  
@-ms-keyframes move-map {
    0% {
      background-position: -849px 0; }
  
    100% {
      background-position: 0 0; } }
  
@keyframes move-map {
    0% {
      background-position: -849px 0; }
  
    100% {
      background-position: 0 0; } }

#planete {
    position: absolute;
    bottom: 30%; left: 40%;
} */



/* @media screen and (max-width: 900px) {
    body {

    }
    #texte {
        font-size: 13px;
    }
    .ball {
        height: 75%;
        width: 75%;
    }
    #planete {
        left: 25%;
    }
    #réseaux {
        font-size: 25px;
    }
}
@media screen and (max-width: 500px) {
    #texte {
        font-size: 10px;
    }
    .ball {
        height: 55%;
        width: 55%;
    }
    #planete {
        bottom: 25%; left: 25%;
    }
} */





/* .scene2 {
    position: absolute;
    top: 75%;
    left: 48%;
    perspective: 800px;
    display: flex;
    justify-content: center;
    align-items: center;
}
  
.cube {
     position: relative;
     width: 100px;
     height: 100px;
     transform-style: preserve-3d;
     animation: rotation 10s infinite alternate;
}
  
@keyframes rotation {
    0% { transform: rotateY(0deg) rotateX(0deg); }
    80% { transform: rotateY(720deg) rotateX(60deg); }
}
  
.cube__face {
    position: absolute;
    width: 150px;
    height: 150px;
}
  
.cube__face--left {
    background-image: url('https://uploaddeimagens.com.br/images/000/955/232/full/side.jpg?1497835464');
    transform: translateX(-75px) rotateY(90deg);
}
  
.cube__face--right {
    background-image: url('https://uploaddeimagens.com.br/images/000/955/232/full/side.jpg?1497835464');
    transform: translateX(75px) rotateY(90deg);
}
  
.cube__face--bottom {
    background-image: url('https://uploaddeimagens.com.br/images/000/955/231/full/bottom.jpg?1497835434');
    transform: translateY(75px) rotateX(90deg);
}
  
.cube__face--top {
    background-image: url('https://uploaddeimagens.com.br/images/000/955/233/thumb/top.jpg?1497835487');
    transform: translateY(-75px) rotateX(90deg);
}
  
.cube__face--back {
    background-image: url('https://uploaddeimagens.com.br/images/000/955/232/full/side.jpg?1497835464');
    transform: translateZ(-75px);
}
  
.cube__face--front {
    background-image: url('https://uploaddeimagens.com.br/images/000/955/232/full/side.jpg?1497835464');
    transform: translateZ(75px);
} */




/* .cuboid {
    width: 100%;
    height: 100%;
    position: relative;
}
.cuboid__side:nth-of-type(1) {
    height: calc(var(--thickness) * var(--coefficient));
    width: 100%;
    position: absolute;
    top: 0;
    transform: translate(0, -50%) rotateX(90deg);
}
.cuboid__side:nth-of-type(2) {
    height: 100%;
    width: calc(var(--thickness) * var(--coefficient));
    position: absolute;
    top: 50%;
    right: 0;
    transform: translate(50%, -50%) rotateY(90deg);
}
.cuboid__side:nth-of-type(3) {
    width: 100%;
    height: calc(var(--thickness) * var(--coefficient));
    position: absolute;
    bottom: 0;
    transform: translate(0%, 50%) rotateX(90deg);
}
.cuboid__side:nth-of-type(4) {
    height: 100%;
    width: calc(var(--thickness) * var(--coefficient));
    position: absolute;
    left: 0;
    top: 50%;
    transform: translate(-50%, -50%) rotateY(90deg);
}
.cuboid__side:nth-of-type(5) {
    height: 100%;
    width: 100%;
    transform: translate3d(0, 0, calc(var(--thickness) * (var(--coefficient) * 0.5)));
    position: absolute;
    top: 0;
    left: 0;
}
.cuboid__side:nth-of-type(6) {
    height: 100%;
    width: 100%;
    transform: translate3d(0, 0, calc(var(--thickness) * (var(--coefficient) * -0.5))) rotateY(180deg);
    position: absolute;
    top: 0;
    left: 0;
} */


*,
*:after,
*:before {
    box-sizing: border-box;
    transform-style: preserve-3d;
}
:root {
    --base-unit: 1;
    --coefficient: 1vmin;
    --speed: 0.8s;
    --base-size: calc(var(--base-unit) * var(--coefficient));
    --width: calc(16 * var(--base-size));
    --height: calc(32 * var(--base-size));
    --shirt-hue: 180;
    --s-1: hsl(var(--shirt-hue), 100%, 39%);
    --s-2: hsl(var(--shirt-hue), 100%, 35%);
    --s-3: hsl(var(--shirt-hue), 100%, 37%);
    --s-4: hsl(var(--shirt-hue), 100%, 34%);
    --s-5: hsl(var(--shirt-hue), 100%, 27%);
    --s-6: hsl(var(--shirt-hue), 100%, 25%);
    --s-7: hsl(var(--shirt-hue), 100%, 21%);
    --trouser-hue: 246;
    --t-1: hsl(var(--trouser-hue), 47%, 44%);
    --t-2: hsl(var(--trouser-hue), 47%, 36%);
    --t-3: hsl(var(--trouser-hue), 48%, 30%);
    --t-4: hsl(var(--trouser-hue), 55%, 54%);
    --t-5: hsl(var(--trouser-hue), 55%, 24%);
    --c-1: #6b6b6b;
    --c-2: #404040;
    --c-3: #0d0d0d;
    --base-hue: 100;
    --dirt: hsl(calc(var(--base-hue) - 10), 23%, 25%);
  
    --arm-rotate: 0;
  
    --f-1: hsl(50, 54%, 20%);
    --f-2: hsl(34, 68%, 28%);
    --f-3: hsl(35, 60%, 38%);
    --f-4: hsl(14, 49%, 47%);
    --f-5: hsl(31, 53%, 59%);
    --f-6: hsl(30, 50%, 64%);
  
    --f-1: hsl(30, 60%, 2%);
    --f-2: hsl(34, 64%, 9%);
    --f-3: hsl(35, 64%, 12%);
    --f-4: hsl(14, 49%, 13%);
    --f-5: hsl(10, 50%, 14%);
    --f-6: hsl(30, 50%, 10%);
  
    --white: hsl(0, 0%, 100%);
    --eyes: hsl(256, 39%, 33%);
  
    --h-1: hsl(20, 32%, 44%);
    --h-2: hsl(22, 25%, 51%);
    --h-3: hsl(20, 26%, 51%);
    --h-4: hsl(19, 26%, 55%);
    --h-5: hsl(23, 26%, 51%);
    --h-6: hsl(24, 25%, 49%);
    --h-7: hsl(22, 35%, 39%);
    --h-8: hsl(19, 25%, 51%);
    --h-9: hsl(21, 26%, 42%);
    --h-10: hsl(18, 23%, 47%);
    --h-11: hsl(20, 25%, 46%);
    --h-12: hsl(19, 25%, 49%);
    --h-13: hsl(19, 25%, 49%);
    --h-14: hsl(16, 28%, 48%);
    --h-15: hsl(22, 40%, 31%);
    --h-16: hsl(23, 39%, 39%);
    --h-17: hsl(21, 28%, 50%);
    --h-18: hsl(17, 38%, 26%);
    --h-19: hsl(14, 23%, 50%);
    --h-20: hsl(12, 39%, 29%);
    --h-21: hsl(21, 39%, 31%);
    --h-22: hsl(24, 40%, 35%);
    --h-23: hsl(23, 44%, 26%);
    --h-24: hsl(23, 42%, 29%);
    --h-25: hsl(22, 38%, 32%);
    --h-26: hsl(23, 45%, 31%);
    --h-27: hsl(22, 37%, 38%);
    --h-28: hsl(21, 33%, 40%);
    --h-29: hsl(23, 40%, 33%);
    --h-30: hsl(22, 42%, 27%);
    --h-31: hsl(22, 39%, 37%);
    --h-32: hsl(25, 41%, 33%);
  
    --z-1: hsl(calc(var(--base-hue) + 4), 37%, 34%);
    --z-2: hsl(calc(var(--base-hue) + 4), 35%, 32%);
    --z-3: hsl(calc(var(--base-hue) - 1), 38%, 33%);
    --z-4: hsl(calc(var(--base-hue) + 8), 36%, 30%);
    --z-5: hsl(calc(var(--base-hue) + 5), 38%, 27%);
    --z-6: hsl(calc(var(--base-hue) + 6), 34%, 29%);
    --z-7: hsl(calc(var(--base-hue) + 4), 33%, 31%);
    --z-8: hsl(calc(var(--base-hue) + 3), 35%, 36%);
    --z-9: hsl(calc(var(--base-hue) + 1), 42%, 41%);
    --z-10: hsl(calc(var(--base-hue) + 2), 37%, 42%);
    --z-11: hsl(calc(var(--base-hue) + 3), 34%, 32%);
    --z-12: hsl(calc(var(--base-hue) + 2), 25%, 45%);
    --z-13: hsl(calc(var(--base-hue) + 1), 24%, 47%);
    --z-14: hsl(calc(var(--base-hue) - 3), 22%, 50%);
    --z-15: hsl(calc(var(--base-hue) - 4), 24%, 47%);
    --z-16: hsl(calc(var(--base-hue) + 0), 24%, 47%);
    --z-17: hsl(calc(var(--base-hue) - 2), 31%, 40%);
    --z-18: hsl(calc(var(--base-hue) + 1), 24%, 42%);
    --z-19: hsl(calc(var(--base-hue) - 2), 25%, 44%);
    --z-20: hsl(calc(var(--base-hue) - 4), 22%, 43%);
    --z-21: hsl(calc(var(--base-hue) - 2), 26%, 38%);
    --z-22: hsl(calc(var(--base-hue) - 1), 35%, 36%);
    --z-23: hsl(calc(var(--base-hue) - 7), 28%, 43%);
    --z-24: hsl(calc(var(--base-hue) - 1), 40%, 35%);
    --z-25: hsl(calc(var(--base-hue) - 2), 28%, 43%);
    --z-26: hsl(calc(var(--base-hue) - 8), 23%, 46%);
    --z-27: hsl(calc(var(--base-hue) - 5), 38%, 23%);
    --z-28: hsl(calc(var(--base-hue) - 1), 27%, 46%);
    --z-29: hsl(calc(var(--base-hue) + 1), 40%, 35%);
    --z-30: hsl(calc(var(--base-hue) + 3), 43%, 28%);
    --z-31: hsl(calc(var(--base-hue) + 0), 36%, 33%);
    --z-32: hsl(calc(var(--base-hue) + 0), 41%, 33%);
    --z-33: hsl(calc(var(--base-hue) + 1), 38%, 29%);
    --z-34: hsl(calc(var(--base-hue) - 9), 38%, 31%);
    --z-35: hsl(calc(var(--base-hue) + 3), 41%, 25%);
    --z-36: hsl(calc(var(--base-hue) + 2), 39%, 32%);
    --z-37: hsl(calc(var(--base-hue) + 0), 42%, 24%);
    --z-38: hsl(calc(var(--base-hue) + 1), 45%, 23%);
    --z-39: hsl(calc(var(--base-hue) + 0), 38%, 30%);
    --z-40: hsl(calc(var(--base-hue) + 1), 40%, 26%);
    --z-41: hsl(calc(var(--base-hue) - 6), 38%, 10%);
    --z-42: hsl(calc(var(--base-hue) - 6), 38%, 15%);
    --feature: #1a1a1a;
  
    --character-face:
      linear-gradient(var(--f-4), var(--f-4)) calc(var(--base-size) * 4) 0 / calc(var(--base-size) * 3) calc(var(--base-size) * 1),
      linear-gradient(var(--f-3), var(--f-3)) calc(var(--base-size) * 2) calc(var(--base-size) * 1) / calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--f-1), var(--f-1)) 0 0 / calc(var(--base-size) * 8) calc(var(--base-size) * 2),
      linear-gradient(var(--f-1), var(--f-1)) 0 0 / calc(var(--base-size) * 1) calc(var(--base-size) * 3),
      linear-gradient(var(--f-1), var(--f-1)) calc(var(--base-size) * 7) 0 / calc(var(--base-size) * 1) calc(var(--base-size) * 3),
      linear-gradient(var(--h-1), var(--h-1)) calc(var(--base-size) * 1) calc(var(--base-size) * 2) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-2), var(--h-2)) calc(var(--base-size) * 2) calc(var(--base-size) * 2) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-3), var(--h-3)) calc(var(--base-size) * 3) calc(var(--base-size) * 2) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-4), var(--h-4)) calc(var(--base-size) * 4) calc(var(--base-size) * 2) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-5), var(--h-5)) calc(var(--base-size) * 5) calc(var(--base-size) * 2) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-6), var(--h-6)) calc(var(--base-size) * 6) calc(var(--base-size) * 2) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
  
      linear-gradient(var(--h-7), var(--h-7)) calc(var(--base-size) * 0) calc(var(--base-size) * 3) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-7), var(--h-7)) calc(var(--base-size) * 1) calc(var(--base-size) * 3) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-8), var(--h-8)) calc(var(--base-size) * 2) calc(var(--base-size) * 3) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-9), var(--h-9)) calc(var(--base-size) * 3) calc(var(--base-size) * 3) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-10), var(--h-10)) calc(var(--base-size) * 4) calc(var(--base-size) * 3) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-11), var(--h-11)) calc(var(--base-size) * 5) calc(var(--base-size) * 3) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-12), var(--h-12)) calc(var(--base-size) * 6) calc(var(--base-size) * 3) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-11), var(--h-11)) calc(var(--base-size) * 7) calc(var(--base-size) * 3) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
  
      linear-gradient(var(--eyes), var(--eyes)) calc(var(--base-size) * 2) calc(var(--base-size) * 4)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--white), var(--white)) calc(var(--base-size) * 1) calc(var(--base-size) * 4)/calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--eyes), var(--eyes)) calc(var(--base-size) * 5) calc(var(--base-size) * 4)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--white), var(--white)) calc(var(--base-size) * 5) calc(var(--base-size) * 4)/calc(var(--base-size) * 2) calc(var(--base-size) * 1),
  
      linear-gradient(var(--h-19), var(--h-19)) calc(var(--base-size) * 0) calc(var(--base-size) * 4) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-8), var(--h-8)) calc(var(--base-size) * 3) calc(var(--base-size) * 4) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-14), var(--h-14)) calc(var(--base-size) * 4) calc(var(--base-size) * 4) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-11), var(--h-11)) calc(var(--base-size) * 8) calc(var(--base-size) * 4) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
  
      linear-gradient(var(--h-20), var(--h-20)) calc(var(--base-size) * 0) calc(var(--base-size) * 5) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-16), var(--h-16)) calc(var(--base-size) * 1) calc(var(--base-size) * 5) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-17), var(--h-17)) calc(var(--base-size) * 2) calc(var(--base-size) * 5) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-18), var(--h-18)) calc(var(--base-size) * 3) calc(var(--base-size) * 5) /calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--h-17), var(--h-17)) calc(var(--base-size) * 5) calc(var(--base-size) * 5) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-11), var(--h-11)) calc(var(--base-size) * 6) calc(var(--base-size) * 5) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-27), var(--h-27)) calc(var(--base-size) * 7) calc(var(--base-size) * 5) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
  
      linear-gradient(var(--h-21), var(--h-21)) calc(var(--base-size) * 0) calc(var(--base-size) * 6) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-22), var(--h-22)) calc(var(--base-size) * 1) calc(var(--base-size) * 6) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-20), var(--h-20)) calc(var(--base-size) * 2) calc(var(--base-size) * 6) /calc(var(--base-size) * 4) calc(var(--base-size) * 1),
      linear-gradient(var(--h-28), var(--h-28)) calc(var(--base-size) * 6) calc(var(--base-size) * 6) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-21), var(--h-21)) calc(var(--base-size) * 7) calc(var(--base-size) * 6) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
  
      linear-gradient(var(--h-24), var(--h-24)) calc(var(--base-size) * 0) calc(var(--base-size) * 7) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-25), var(--h-25)) calc(var(--base-size) * 1) calc(var(--base-size) * 7) /calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--h-24), var(--h-24)) calc(var(--base-size) * 3) calc(var(--base-size) * 7) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-21), var(--h-21)) calc(var(--base-size) * 4) calc(var(--base-size) * 7) /calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--h-30), var(--h-30)) calc(var(--base-size) * 6) calc(var(--base-size) * 7) /calc(var(--base-size) * 2) calc(var(--base-size) * 1),
  
      var(--h-2);
  
    --character-crown: linear-gradient(var(--f-2), var(--f-2)) 0 calc(var(--base-size) * 3)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-3), var(--f-3)) calc(var(--base-size) * 3) calc(var(--base-size) * 2)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-2), var(--f-2)) calc(var(--base-size) * 3) calc(var(--base-size) * 3)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-2), var(--f-2)) calc(var(--base-size) * 1) calc(var(--base-size) * 1)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-5), var(--f-5)) calc(var(--base-size) * 5) calc(var(--base-size) * 6)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-2), var(--f-2)) calc(var(--base-size) * 2) 0/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-3), var(--f-3)) calc(var(--base-size) * 1) calc(var(--base-size) * 6)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-2), var(--f-2)) calc(var(--base-size) * 3) calc(var(--base-size) * 6)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-1), var(--f-1)) calc(var(--base-size) * 4) calc(var(--base-size) * 6)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-3), var(--f-3)) calc(var(--base-size) * 2) calc(var(--base-size) * 5)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-1), var(--f-1)) calc(var(--base-size) * 1) calc(var(--base-size) * 5)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-3), var(--f-3)) calc(var(--base-size) * 3) calc(var(--base-size) * 4)/calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--f-3), var(--f-3)) calc(var(--base-size) * 3) calc(var(--base-size) * 4)/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--f-3), var(--f-3)) calc(var(--base-size) * 5) 0/calc(var(--base-size) * 3) calc(var(--base-size) * 3),
      linear-gradient(var(--f-1), var(--f-1)) calc(var(--base-size) * 4) 0/calc(var(--base-size) * 1) calc(var(--base-size) * 4),
      linear-gradient(var(--f-1), var(--f-1)) calc(var(--base-size) * 2) calc(var(--base-size) * 3)/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--f-1), var(--f-1)) calc(var(--base-size) * 4) calc(var(--base-size) * 3)/calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--f-4), var(--f-4)) calc(var(--base-size) * 1) calc(var(--base-size) * 1)/calc(var(--base-size) * 6) calc(var(--base-size) * 6),
      var(--f-1);
  
    --character-crane: linear-gradient(var(--f-4), var(--f-4)) 0 0 / calc(var(--base-size) * 3) calc(var(--base-size) * 3),
      linear-gradient(var(--f-3), var(--f-3)) calc(var(--base-size) * 2) calc(var(--base-size) * 7)/calc(var(--base-size) * 4) calc(var(--base-size) * 1),
      linear-gradient(var(--f-1), var(--f-1)) 0 calc(var(--base-size) * 3) /calc(var(--base-size) * 1) calc(var(--base-size) * 4),
      linear-gradient(var(--f-1), var(--f-1)) calc(var(--base-size) * 3) 0 /calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--f-1), var(--f-1)) calc(var(--base-size) * 3) 0 /calc(var(--base-size) * 1) calc(var(--base-size) * 4),
      linear-gradient(var(--f-1), var(--f-1)) calc(var(--base-size) * 2) calc(var(--base-size) * 3) /calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--f-4), var(--f-4)) calc(var(--base-size) * 5) 0/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-4), var(--f-4)) calc(var(--base-size) * 6) calc(var(--base-size) * 1) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-4), var(--f-4)) calc(var(--base-size) * 7) calc(var(--base-size) * 3) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-4), var(--f-4)) calc(var(--base-size) * 4) calc(var(--base-size) * 2) /calc(var(--base-size) * 1) calc(var(--base-size) * 4),
      linear-gradient(var(--f-4), var(--f-4)) calc(var(--base-size) * 3) calc(var(--base-size) * 4) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-4), var(--f-4)) calc(var(--base-size) * 5) calc(var(--base-size) * 5) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-4), var(--f-4)) calc(var(--base-size) * 3) calc(var(--base-size) * 6) /calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--f-6), var(--f-6)) calc(var(--base-size) * 2) calc(var(--base-size) * 6) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-3), var(--f-3)) calc(var(--base-size) * 5) calc(var(--base-size) * 3) /calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--f-3), var(--f-3)) calc(var(--base-size) * 6) 0 /calc(var(--base-size) * 2) calc(var(--base-size) * 2),
      linear-gradient(var(--f-3), var(--f-3)) calc(var(--base-size) * 7) calc(var(--base-size) * 4) /calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--f-2), var(--f-2)) 0 0 /calc(var(--base-size) * 8) calc(var(--base-size) * 7),
      linear-gradient(var(--h-16), var(--h-16)) calc(var(--base-size) * 1) calc(var(--base-size) * 7) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-16), var(--h-16)) calc(var(--base-size) * 6) calc(var(--base-size) * 7) /calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      var(--h-14);
  
    --character-chin: linear-gradient(var(--h-19), var(--h-19)) calc(var(--base-size) * 1) calc(var(--base-size) * 1)/calc(var(--base-size) * 6) calc(var(--base-size) * 6),
      var(--h-22);
  
    --character-ear: linear-gradient(var(--f-2), var(--f-2)) 0 0 / calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--feature), var(--feature)) calc(var(--base-size) * 4) calc(var(--base-size) * 6)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-7), var(--h-7)) calc(var(--base-size) * 5) calc(var(--base-size) * 7)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-27), var(--h-27)) calc(var(--base-size) * 3) calc(var(--base-size) * 7)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-28), var(--h-28)) calc(var(--base-size) * 3) calc(var(--base-size) * 6)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-16), var(--h-16)) calc(var(--base-size) * 2) calc(var(--base-size) * 7)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-29), var(--h-29)) calc(var(--base-size) * 1) calc(var(--base-size) * 7)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-30), var(--h-30)) calc(var(--base-size) * 0) calc(var(--base-size) * 6)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-32), var(--h-32)) calc(var(--base-size) * 0) calc(var(--base-size) * 5)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-28), var(--h-28)) calc(var(--base-size) * 1) calc(var(--base-size) * 5)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-26), var(--h-26)) calc(var(--base-size) * 1) calc(var(--base-size) * 6)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-31), var(--h-31)) calc(var(--base-size) * 2) calc(var(--base-size) * 6)/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--h-9), var(--h-9)) calc(var(--base-size) * 2) calc(var(--base-size) * 4)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-22), var(--h-22)) calc(var(--base-size) * 1) calc(var(--base-size) * 4)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--f-4), var(--f-4)) 0 calc(var(--base-size) * 2) / calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--f-4), var(--f-4)) calc(var(--base-size) * 3) calc(var(--base-size) * 5) / calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--f-4), var(--f-4)) calc(var(--base-size) * 3) calc(var(--base-size) * 0) / calc(var(--base-size) * 2) calc(var(--base-size) * 2),
      linear-gradient(var(--f-4), var(--f-4)) calc(var(--base-size) * 4) calc(var(--base-size) * 1) / calc(var(--base-size) * 2) calc(var(--base-size) * 2),
      linear-gradient(var(--f-4), var(--f-4)) calc(var(--base-size) * 5) calc(var(--base-size) * 2) / calc(var(--base-size) * 2) calc(var(--base-size) * 2),
      linear-gradient(var(--f-2), var(--f-2)) calc(var(--base-size) * 6) calc(var(--base-size) * 0) / calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--f-2), var(--f-2)) calc(var(--base-size) * 7) calc(var(--base-size) * 3) / calc(var(--base-size) * 1) calc(var(--base-size) * 3),
      linear-gradient(var(--f-3), var(--f-3)) calc(var(--base-size) * 3) calc(var(--base-size) * 4) / calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--f-6), var(--f-6)) calc(var(--base-size) * 5) calc(var(--base-size) * 6) / calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--f-1), var(--f-1)) 0 0 / calc(var(--base-size) * 8) calc(var(--base-size) * 4),
      linear-gradient(var(--f-1), var(--f-1)) calc(var(--base-size) * 3) 0 / calc(var(--base-size) * 5) calc(var(--base-size) * 6),
      linear-gradient(var(--f-1), var(--f-1)) calc(var(--base-size) * 5) 0 / calc(var(--base-size) * 3) calc(var(--base-size) * 7),
      linear-gradient(var(--f-1), var(--f-1)) 0 0 / calc(var(--base-size) * 1) calc(var(--base-size) * 5),
      var(--h-26);
  
    --character-fist: linear-gradient(var(--h-8), var(--h-8)) 0 0/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--h-8), var(--h-8)) calc(var(--base-size) * 1) calc(var(--base-size) * 2)/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--h-8), var(--h-8)) calc(var(--base-size) * 2) 0/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--h-8), var(--h-8)) calc(var(--base-size) * 3) calc(var(--base-size) * 2)/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      var(--h-7);
  
    --character-arm-top: linear-gradient(var(--s-2), var(--s-2)) 0 0/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-2), var(--s-2)) calc(var(--base-size) * 3) 0/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-3), var(--s-3)) 0 calc(var(--base-size) * 1)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-3), var(--s-3)) calc(var(--base-size) * 2) 0/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--s-2), var(--s-2)) 0 calc(var(--base-size) * 3)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-2), var(--s-2)) calc(var(--base-size) * 3) calc(var(--base-size) * 3)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-1), var(--s-1)) 0 0/calc(var(--base-size) * 4) calc(var(--base-size) * 4),
      linear-gradient(var(--h-2), var(--h-2)) 0 calc(var(--base-size) * 6)/calc(var(--base-size) * 1) calc(var(--base-size) * 3),
      linear-gradient(var(--h-2), var(--h-2)) calc(var(--base-size) * 2) calc(var(--base-size) * 5)/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--h-2), var(--h-2)) calc(var(--base-size) * 3) calc(var(--base-size) * 1)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-2), var(--h-2)) 0vmin calc(var(--base-size) * 1)/calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--h-2), var(--h-2)) calc(var(--base-size) * 1) calc(var(--base-size) * 10)/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      var(--h-4);
  
    --character-arm-right: linear-gradient(var(--s-5), var(--s-5)) calc(var(--base-size) * 3) calc(var(--base-size) * 1)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-5), var(--s-5)) calc(var(--base-size) * 1) calc(var(--base-size) * 1)/calc(var(--base-size) * 2) calc(var(--base-size) * 3),
      linear-gradient(var(--s-2), var(--s-2)) 0 0/calc(var(--base-size) * 4) calc(var(--base-size) * 4),
      linear-gradient(var(--h-4), var(--h-4)) 0 calc(var(--base-size) * 4)/calc(var(--base-size) * 1) calc(var(--base-size) * 3),
      linear-gradient(var(--h-4), var(--h-4)) calc(var(--base-size) * 1) calc(var(--base-size) * 8)/calc(var(--base-size) * 1) calc(var(--base-size) * 3),
      linear-gradient(var(--h-4), var(--h-4)) calc(var(--base-size) * 3) calc(var(--base-size) * 6)/calc(var(--base-size) * 1) calc(var(--base-size) * 3),
      var(--h-3);
  
    --character-arm-back: linear-gradient(var(--h-2), var(--h-2)) calc(var(--base-size) * 1) calc(var(--base-size) * 6)/calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--s-2), var(--s-2)) 0 0/calc(var(--base-size) * 4) calc(var(--base-size) * 4),
      linear-gradient(var(--h-2), var(--h-2)) 0 calc(var(--base-size) * 9)/calc(var(--base-size) * 1) calc(var(--base-size) * 3),
      linear-gradient(var(--h-2), var(--h-2)) calc(var(--base-size) * 2) calc(var(--base-size) * 9)/calc(var(--base-size) * 1) calc(var(--base-size) * 3),
      var(--h-4);
  
    --character-arm-inside: linear-gradient(var(--s-5), var(--s-5)) calc(var(--base-size) * 3) calc(var(--base-size) * 1)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-5), var(--s-5)) calc(var(--base-size) * 1) calc(var(--base-size) * 1)/calc(var(--base-size) * 2) calc(var(--base-size) * 3),
      linear-gradient(var(--s-1), var(--s-1)) 0 0/calc(var(--base-size) * 4) calc(var(--base-size) * 4),
      linear-gradient(var(--h-5), var(--h-5)) 0 calc(var(--base-size) * 10)/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--h-5), var(--h-5)) calc(var(--base-size) * 2) calc(var(--base-size) * 10)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-5), var(--h-5)) calc(var(--base-size) * 3) calc(var(--base-size) * 7)/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--h-5), var(--h-5)) calc(var(--base-size) * 1) calc(var(--base-size) * 5)/calc(var(--base-size) * 1) calc(var(--base-size) * 3),
      var(--h-6);
  
    --shoulder: linear-gradient(var(--s-2), var(--s-2)) 0 0/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-1), var(--s-1)) calc(var(--base-size) * 3) 0/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-1), var(--s-1)) 0 calc(var(--base-size) * 3)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-1), var(--s-1)) calc(var(--base-size) * 3) calc(var(--base-size) * 3)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      var(--s-3);
  
    --trouser-front: linear-gradient(var(--t-2), var(--t-2)) calc(var(--base-size) * 1) calc(var(--base-size) * 6)/calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--c-1), var(--c-1)) 0 calc(var(--base-size) * 10)/calc(var(--base-size) * 4) calc(var(--base-size) * 2),
      var(--t-1);
  
    --trouser-inside: linear-gradient(var(--t-4), var(--t-4)) calc(var(--base-size) * 1) 0/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--c-2), var(--c-2)) calc(var(--base-size) * 2) calc(var(--base-size) * 9)/calc(var(--base-size) * 2) calc(var(--base-size) * 3),
      linear-gradient(var(--c-2), var(--c-2)) 0 calc(var(--base-size) * 10)/calc(var(--base-size) * 4) calc(var(--base-size) * 2),
      linear-gradient(var(--t-5), var(--t-5)) calc(var(--base-size) * 1) calc(var(--base-size) * 8)/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--t-5), var(--t-5)) calc(var(--base-size) * 2) calc(var(--base-size) * 6)/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--t-5), var(--t-5)) calc(var(--base-size) * 1) calc(var(--base-size) * 1)/calc(var(--base-size) * 1) calc(var(--base-size) * 5),
      var(--t-3);
  
    --trouser-right: linear-gradient(var(--t-3), var(--t-3)) calc(var(--base-size) * 1) 0/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--t-3), var(--t-3)) calc(var(--base-size) * 2) calc(var(--base-size) * 1)/calc(var(--base-size) * 1) calc(var(--base-size) * 7),
      linear-gradient(var(--t-3), var(--t-3)) calc(var(--base-size) * 1) calc(var(--base-size) * 1)/calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--c-2), var(--c-2)) 0 calc(var(--base-size) * 10)/calc(var(--base-size) * 4) calc(var(--base-size) * 2),
      linear-gradient(var(--c-2), var(--c-2)) calc(var(--base-size) * 2) calc(var(--base-size) * 9)/calc(var(--base-size) * 2) calc(var(--base-size) * 3),
      var(--t-2);
  
    --trouser-back: linear-gradient(var(--t-2), var(--t-2)) 0 calc(var(--base-size) * 5)/calc(var(--base-size) * 4) calc(var(--base-size) * 2),
      linear-gradient(var(--c-1), var(--c-1)) 0 calc(var(--base-size) * 9)/calc(var(--base-size) * 4) calc(var(--base-size) * 3),
      var(--t-1);
  
    --shirt-front: linear-gradient(var(--t-2), var(--t-2)) calc(var(--base-size) * 5) calc(var(--base-size) * 10)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--t-2), var(--t-2)) calc(var(--base-size) * 6) calc(var(--base-size) * 11)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-24), var(--h-24)) calc(var(--base-size) * 2) 0/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-20), var(--h-20)) calc(var(--base-size) * 3) 0/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--h-2), var(--h-2)) calc(var(--base-size) * 2) 0/calc(var(--base-size) * 4) calc(var(--base-size) * 1),
      linear-gradient(var(--h-2), var(--h-2)) calc(var(--base-size) * 3) 0/calc(var(--base-size) * 2) calc(var(--base-size) * 2),
      linear-gradient(var(--s-4), var(--s-4)) 0 0/calc(var(--base-size) * 8) calc(var(--base-size) * 1),
      linear-gradient(var(--s-4), var(--s-4)) calc(var(--base-size) * 2) calc(var(--base-size) * 1)/calc(var(--base-size) * 4) calc(var(--base-size) * 1),
      linear-gradient(var(--s-3), var(--s-3)) 0 0/calc(var(--base-size) * 8) calc(var(--base-size) * 2),
      linear-gradient(var(--s-2), var(--s-2)) calc(var(--base-size) * 7) calc(var(--base-size) * 4)/calc(var(--base-size) * 1) calc(var(--base-size) * 8),
      linear-gradient(var(--s-2), var(--s-2)) calc(var(--base-size) * 6) calc(var(--base-size) * 4)/calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--s-2), var(--s-2)) 0vmin calc(var(--base-size) * 4)/calc(var(--base-size) * 1) calc(var(--base-size) * 4),
      linear-gradient(var(--s-2), var(--s-2)) 0vmin calc(var(--base-size) * 4)/calc(var(--base-size) * 2) calc(var(--base-size) * 2),
      linear-gradient(var(--s-2), var(--s-2)) 0vmin calc(var(--base-size) * 9)/calc(var(--base-size) * 3) calc(var(--base-size) * 1),
      linear-gradient(var(--s-2), var(--s-2)) calc(var(--base-size) * 3) calc(var(--base-size) * 6)/calc(var(--base-size) * 1) calc(var(--base-size) * 3),
      linear-gradient(var(--s-2), var(--s-2)) calc(var(--base-size) * 4) calc(var(--base-size) * 3)/calc(var(--base-size) * 1) calc(var(--base-size) * 4),
      linear-gradient(var(--s-2), var(--s-2)) calc(var(--base-size) * 3) calc(var(--base-size) * 2)/calc(var(--base-size) * 2) calc(var(--base-size) * 2),
      linear-gradient(var(--s-3), var(--s-3)) calc(var(--base-size) * 6) calc(var(--base-size) * 5)/calc(var(--base-size) * 1) calc(var(--base-size) * 3),
      linear-gradient(var(--s-3), var(--s-3)) calc(var(--base-size) * 3) calc(var(--base-size) * 5)/calc(var(--base-size) * 2) calc(var(--base-size) * 4),
      linear-gradient(var(--s-3), var(--s-3)) calc(var(--base-size) * 3) calc(var(--base-size) * 9)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-3), var(--s-3)) calc(var(--base-size) * 5) calc(var(--base-size) * 9)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-1), var(--s-1)) calc(var(--base-size) * 6) calc(var(--base-size) * 10)/calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--s-1), var(--s-1)) 0 0/calc(var(--base-size) * 8) calc(var(--base-size) * 10),
      var(--t-1);
  
    --shirt-back: linear-gradient(var(--t-2), var(--t-2)) 0 calc(var(--base-size) * 10)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--t-2), var(--t-2)) calc(var(--base-size) * 7) calc(var(--base-size) * 10)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-3), var(--s-3)) 0 0/calc(var(--base-size) * 2) calc(var(--base-size) * 2),
      linear-gradient(var(--s-3), var(--s-3)) 0 0/calc(var(--base-size) * 1) calc(var(--base-size) * 4),
      linear-gradient(var(--s-2), var(--s-2)) calc(var(--base-size) * 7) 0/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-3), var(--s-3)) 0 calc(var(--base-size) * 9)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-4), var(--s-4)) calc(var(--base-size) * 5) calc(var(--base-size) * 9)/calc(var(--base-size) * 3) calc(var(--base-size) * 1),
      linear-gradient(var(--s-4), var(--s-4)) calc(var(--base-size) * 1) calc(var(--base-size) * 6)/calc(var(--base-size) * 2) calc(var(--base-size) * 2),
      linear-gradient(var(--s-4), var(--s-4)) calc(var(--base-size) * 2) calc(var(--base-size) * 3)/calc(var(--base-size) * 1) calc(var(--base-size) * 5),
      linear-gradient(var(--s-4), var(--s-4)) calc(var(--base-size) * 5) calc(var(--base-size) * 3)/calc(var(--base-size) * 1) calc(var(--base-size) * 5),
      linear-gradient(var(--s-4), var(--s-4)) calc(var(--base-size) * 5) calc(var(--base-size) * 5)/calc(var(--base-size) * 2) calc(var(--base-size) * 1),
      linear-gradient(var(--s-3), var(--s-3)) calc(var(--base-size) * 2) calc(var(--base-size) * 3)/calc(var(--base-size) * 2) calc(var(--base-size) * 3),
      linear-gradient(var(--s-3), var(--s-3)) calc(var(--base-size) * 5) calc(var(--base-size) * 4)/calc(var(--base-size) * 2) calc(var(--base-size) * 3),
      linear-gradient(var(--s-3), var(--s-3)) calc(var(--base-size) * 4) calc(var(--base-size) * 6)/calc(var(--base-size) * 2) calc(var(--base-size) * 2),
      linear-gradient(var(--s-3), var(--s-3)) calc(var(--base-size) * 1) calc(var(--base-size) * 5)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-4), var(--s-4)) calc(var(--base-size) * 2) calc(var(--base-size) * 9)/calc(var(--base-size) * 2) calc(var(--base-size) * 2),
      linear-gradient(var(--s-4), var(--s-4)) calc(var(--base-size) * 3) calc(var(--base-size) * 9)/calc(var(--base-size) * 1) calc(var(--base-size) * 3),
      linear-gradient(var(--s-3), var(--s-3)) calc(var(--base-size) * 4) 0/calc(var(--base-size) * 4) calc(var(--base-size) * 1),
      linear-gradient(var(--s-1), var(--s-1)) calc(var(--base-size) * 4) calc(var(--base-size) * 9)/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--s-3), var(--s-3)) calc(var(--base-size) * 7) 0/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--s-1), var(--s-1)) 0 0/calc(var(--base-size) * 8) calc(var(--base-size) * 10),
      var(--t-1);
  
    --shirt-side: linear-gradient(var(--t-3), var(--t-3)) 0vmin calc(var(--base-size) * 10)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--t-3), var(--t-3)) calc(var(--base-size) * 2) calc(var(--base-size) * 10)/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--s-2), var(--s-2)) 0 0/calc(var(--base-size) * 4) calc(var(--base-size) * 2),
      linear-gradient(var(--s-7), var(--s-7)) calc(var(--base-size) * 1) 0/calc(var(--base-size) * 2) calc(var(--base-size) * 7),
      linear-gradient(var(--s-7), var(--s-7)) 0 calc(var(--base-size) * 3)/calc(var(--base-size) * 1) calc(var(--base-size) * 2),
      linear-gradient(var(--s-7), var(--s-7)) calc(var(--base-size) * 3) calc(var(--base-size) * 3)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-7), var(--s-7)) calc(var(--base-size) * 3) calc(var(--base-size) * 5)/calc(var(--base-size) * 1) calc(var(--base-size) * 1),
      linear-gradient(var(--s-5), var(--s-5)) calc(var(--base-size) * 1) 0/calc(var(--base-size) * 2) calc(var(--base-size) * 9),
      linear-gradient(var(--s-5), var(--s-5)) calc(var(--base-size) * 1) 0/calc(var(--base-size) * 1) calc(var(--base-size) * 10),
      linear-gradient(var(--s-6), var(--s-6)) 0 0/calc(var(--base-size) * 4) calc(var(--base-size) * 7),
      linear-gradient(var(--s-2), var(--s-2)) 0 0/calc(var(--base-size) * 4) calc(var(--base-size) * 10),
      var(--t-2);
  
    --base-tone: var(--h-1);
}

/* .scene {
    position: fixed;
    top: 50%;
    left: 15%;
    transform: translate3d(-50%, -50%, 100vmin);
    transform: translate3d(-50%, -50%, 100vmin) rotateX(-24deg) rotateY(44deg) rotateX(calc(var(--rotate-x, 0) * 1deg)) rotateY(calc(var(--rotate-y, 0) * 1deg));
    /* transform: translate3d(-50%, -50%, 100vmin) rotateX(-24deg) rotateY(44deg) rotateX(calc(var(--rotate-x, 0) * 1deg)) rotateY(-210deg); */
/* } */
/* .character {
    height: var(--height);
    width: var(--width);
    position: relative;
    animation: showcase 10s infinite linear;
}
  
.character *,
.character *:after {
    transition: background 0.2s, transform 0.2s;
}
  
.character > * {
    position: absolute;
}
.character__head {
    height: calc(8 * var(--base-size));
    width: calc(8 * var(--base-size));
    top: 0;
    left: 50%;
    transform: translate(-50%, 0);
}
.character__arm {
    height: calc(12 * var(--base-size));
    width: calc(4 * var(--base-size));
    top: calc(8 * var(--base-size));
    transform-origin: 50% calc(2 * var(--base-size));
    transform: rotateX(calc(var(--arm-rotate, 0) * 1deg));
    animation: run var(--speed) var(--delay) infinite;
}
.character__arm--left {
    left: 0;
    --delay: calc(var(--speed) * -0.5);
}
.character__arm--right {
    right: 0;
    --delay: 0s;
}
.character__torso {
    height: calc(12 * var(--base-size));
    width: calc(8 * var(--base-size));
    top: calc(8 * var(--base-size));
    left: 50%;
    transform: translate(-50%, 0);
}
.character__leg {
    height: calc(12 * var(--base-size));
    width: calc(4 * var(--base-size));
    top: calc(20 * var(--base-size));
    transform-origin: 50% calc(1 * var(--base-size));
    animation: run var(--speed) var(--delay) infinite;
}
.character__leg--left {
    left: calc(4 * var(--base-size));
    --delay: 0s;
}
.character__leg--right {
    right: calc(4 * var(--base-size));
    --delay: calc(var(--speed) * -0.5);
}
  .cuboid-arm {
    --thickness: calc(4 * var(--base-unit));
}
.cuboid-arm div {
    background: var(--base-tone);
}
.cuboid-arm div:nth-of-type(1) {
    background: var(--shoulder);
    background-repeat: no-repeat;
}
.cuboid-arm div:nth-of-type(2) {
    background: var(--character-arm-right);
    background-repeat: no-repeat;
}
.cuboid-arm div:nth-of-type(3):after {
    content: '';
    height: 100%;
    width: 100%;
    position: absolute;
    background: var(--character-fist);
    background-repeat: no-repeat;
}
.cuboid-arm div:nth-of-type(4) {
    background: var(--character-arm-inside);
    background-repeat: no-repeat;
}
.cuboid-arm div:nth-of-type(5) {
    background: var(--character-arm-top);
    background-repeat: no-repeat;
}
.cuboid-arm div:nth-of-type(6):after {
    content: '';
    height: 100%;
    width: 100%;
    position: absolute;
    background: var(--character-arm-back);
    background-repeat: no-repeat;
}
.cuboid-arm--left div:nth-of-type(4) {
    background: var(--character-arm-right);
    background-repeat: no-repeat;
}
.cuboid-arm--left div:nth-of-type(2) {
    background: var(--character-arm-inside);
    background-repeat: no-repeat;
}
.cuboid-arm--left div:nth-of-type(3):after {
    transform: rotateY(180deg) translate3d(0, 0, 1px);
}
.cuboid-arm--left div:nth-of-type(6):after {
    transform: rotateY(180deg) translate3d(0, 0, -1px);
}
.cuboid-head {
    --thickness: calc(8 * var(--base-unit));
}
  
.cuboid-head div:nth-of-type(5) {
    background: var(--character-face);
    background-repeat: no-repeat;
}
.cuboid-head div:nth-of-type(1) {
    background: var(--character-crown);
    background-repeat: no-repeat;
}
.cuboid-head div:nth-of-type(2),
.cuboid-head div:nth-of-type(4) {
    background: var(--character-ear);
    background-repeat: no-repeat;
}
.cuboid-head div:nth-of-type(6) {
    background: var(--character-crane);
    background-repeat: no-repeat;
}
.cuboid-head div:nth-of-type(3) {
    background: var(--character-chin);
    background-repeat: no-repeat;
}
.cuboid-torso {
    --thickness: calc(4 * var(--base-unit));
}
.cuboid-torso div:nth-of-type(1) {
    background: var(--s-1);
}
.cuboid-torso div:nth-of-type(2) {
    background: var(--shirt-side);
    background-repeat: no-repeat;
}
.cuboid-torso div:nth-of-type(3) {
    background: var(--t-2);
}
.cuboid-torso div:nth-of-type(4) {
    background: var(--shirt-side);
    background-repeat: no-repeat;
}
.cuboid-torso div:nth-of-type(5) {
    background: var(--shirt-front);
    background-repeat: no-repeat;
}
.cuboid-torso div:nth-of-type(6) {
    background: var(--shirt-back);
    background-repeat: no-repeat;
}
.cuboid-leg {
    --thickness: calc(4 * var(--base-unit));
}
.cuboid-leg div:nth-of-type(1) {
    background: var(--t-4);
}
.cuboid-leg div:nth-of-type(2) {
    background: var(--trouser-right);
    background-repeat: no-repeat;
}
.cuboid-leg div:nth-of-type(3) {
    background: var(--c-3);
}
.cuboid-leg div:nth-of-type(4) {
    background: var(--trouser-inside);
    background-repeat: no-repeat;
}
.cuboid-leg div:nth-of-type(5) {
    background: var(--trouser-front);
    background-repeat: no-repeat;
}
.cuboid-leg div:nth-of-type(6) {
    background: var(--trouser-back);
    background-repeat: no-repeat;
}
.cuboid-leg--left div:nth-of-type(4) {
    background: var(--trouser-right);
    background-repeat: no-repeat;
}
.cuboid-leg--left div:nth-of-type(2) {
    background: var(--trouser-inside);
    background-repeat: no-repeat;
}
  
@keyframes jump {
    50% {
      transform: translate(0, -50%);
    }
}
  
@keyframes showcase {
    to {
      transform: rotateY(360deg);
    }
}
  
@keyframes run {
    0%, 100% {
      transform: rotateX(30deg);
    }
    50% {
      transform: rotateX(-30deg);
    }
}
@keyframes crawl {
    0%, 100% {
      transform: rotateX(10deg);
    }
    50% {
      transform: rotateX(-10deg);
    }
}

.skin {
    position: absolute;
    top: 30%;
    left: 80%;
}
.skinT {
    position: absolute;
    top: 20%;
    left: 83%;
    text-shadow: 5px 5px 2px rgb(56, 56, 56);
} */





/* #default {
  position: relative;
  margin-top: 5em;
  margin-left: -15em;
}

.controls {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  right: -10em;
  bottom: 3em;
  z-index: 40;
  order: 10;
  color: rgb(255, 255, 255);
  
}

.controls label {
  padding: 0.5em 1em;
  margin: 0 0.2em;
  border: 2px solid rgb(0, 0, 0);
  border-radius: 100em;
  font-weight: 500;
  font-size: 12px;
  cursor: pointer;
  background-color: rgba(16, 16, 16, 0.5);
  -webkit-backdrop-filter: blur(5px);
          backdrop-filter: blur(5px);
}
.controls label:hover, .controls label:focus {
  background: rgba(255, 255, 255, 0.795);
  color: #101010;
}

.wheatley {
  position: relative;
  left: 19em;
  bottom: 3em;
  width: 15em;
  height: 15em;
  border-radius: 100%;
  transition: 0.8s ease all;
  -webkit-animation: float 8s infinite ease;
          animation: float 8s infinite ease;
  z-index: 2;
  filter: drop-shadow(0 0 4em rgba(0, 0, 0, 0.5));
}
.wheatley-inner {
  position: relative;
  width: 100%;
  height: 100%;
  transition: 0.8s ease all;
}
.wheatley .sides {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
}
.wheatley .sides > div {
  position: absolute;
  width: 20%;
  height: 100%;
  overflow: hidden;
  filter: drop-shadow(0 0 5px rgba(0, 0, 0, 0.5));
}
.wheatley .sides > div:before {
  position: absolute;
  width: 15em;
  height: 15em;
  border: 3em solid #F8F4F0;
  border-radius: 100%;
}
.wheatley .sides > div.left {
  left: 5%;
}
.wheatley .sides > div.left:before {
  left: -25%;
}
.wheatley .sides > div.left:after {
  width: 0.75em;
  height: 0.75em;
  background: #B2B3B9;
  border-radius: 100%;
  position: absolute;
  left: 40%;
  top: 30%;
}
.wheatley .sides > div.right {
  right: 5%;
}
.wheatley .sides > div.right:before {
  right: -25%;
}
.wheatley .inner-sphere {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: calc(100% - 0.5em);
  height: calc(100% - 0.5em);
  border-radius: 100%;
  overflow: hidden;
}
.wheatley .inner-sphere .track {
  position: relative;
  width: 50%;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  height: 130%;
  z-index: 2;
  transition: 0.8s ease all;
  background: linear-gradient(180deg, #d1d1d1 0%, #f8f4f0 40%, #f8f4f0) 60%, #d1d1d1;
}
.wheatley .inner-sphere .track:before {
  position: absolute;
  width: 0.3em;
  height: 100%;
  background: #B2B3B9;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.wheatley .inner-sphere .track .ring-container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1;
  width: 8.8em;
  height: 8.8em;
  border-radius: 100%;
  border: 0.3em solid #B2B3B9;
  overflow: hidden;
  background: #595A59;
}
.wheatley .inner-sphere .track .ring-container .eye-ring {
  position: relative;
  z-index: 10;
  width: 100%;
  height: 100%;
  border: 2em solid #F8F4F0;
  border-radius: 100%;
  transition: 0.8s ease all;
  transform-origin: 50% 50%;
}
.wheatley .inner-sphere .track .ring-container .eye-ring:before, .wheatley .inner-sphere .track .ring-container .eye-ring:after {
  position: absolute;
  left: 50%;
  width: 0.3em;
  background: #B2B3B9;
  transform: translate(-50%, 0);
  height: 2em;
}
.wheatley .inner-sphere .track .ring-container .eye-ring:before {
  top: -2em;
}
.wheatley .inner-sphere .track .ring-container .eye-ring:after {
  bottom: -2em;
}
.wheatley .inner-sphere .track .ring-container .eye-ring .eye {
  position: relative;
  width: 100%;
  height: 100%;
  box-shadow: 0 0 10px inset rgba(0, 0, 0, 0.9);
  border-radius: 100%;
  overflow: hidden;
  background: #404040;
  border: 0.15em solid #B2B3B9;
}
.wheatley .inner-sphere .track .ring-container .eye-ring .eye:before, .wheatley .inner-sphere .track .ring-container .eye-ring .eye:after {
  position: absolute;
  width: 100%;
  height: 50%;
  background-color: #F8F4F0;
  z-index: 1;
  transition: 0.8s ease all;
}
.wheatley .inner-sphere .track .ring-container .eye-ring .eye:before {
  top: -40%;
}
.wheatley .inner-sphere .track .ring-container .eye-ring .eye:after {
  bottom: -40%;
}
.wheatley .inner-sphere .track .ring-container .eye-ring .eye i {
  position: relative;
  display: block;
  border: 0.15em solid #595A59;
  width: 100%;
  height: 100%;
  border-radius: 100%;
  transition: 0.8s ease all;
  background: radial-gradient(circle, #bbf0ff 0%, #2e7bff 37%, #1839e3 75%, #010a19 100%);
}
.wheatley .arm {
  z-index: 20;
  position: absolute;
  display: flex;
  justify-content: center;
  width: 75%;
  left: 50%;
  height: 3em;
  filter: drop-shadow(0 0 5px rgba(0, 0, 0, 0.5));
  transition: 0.8s ease all;
}
.wheatley .arm:before {
  position: absolute;
  left: 0;
  width: 100%;
  height: 0.5em;
  background: #F8F4F0;
  top: 0.3em;
}
.wheatley .arm .curve {
  position: relative;
  width: 55%;
  height: 1.5em;
  overflow: hidden;
}
.wheatley .arm .curve:before {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translate(-50%, 0);
  width: 12em;
  height: 200%;
  border: 0.8em solid #595A59;
  border-radius: 100%;
}
.wheatley .arm .side {
  position: absolute;
  width: 0.5em;
  bottom: 0;
  height: calc(100% - 0.3em);
  background: #595A59;
}
.wheatley .arm .side.left {
  left: 0;
}
.wheatley .arm .side.right {
  right: 0;
}
.wheatley .arm.top {
  bottom: 80%;
  transform: translate(-50%, 0);
}
.wheatley .arm.bottom {
  top: 80%;
  transform: scaleY(-1) translate(-50%, 0);
} */

/* .space {
  position: fixed;
  bottom: -20em;
  left: -20em;
  z-index: 0;
  transition: none;
  -webkit-animation: none;
          animation: none;
}
.space .wheatley-inner {
  -webkit-animation: spin 1s linear infinite;
          animation: spin 1s linear infinite;
}
.space .wheatley-inner i {
  background: radial-gradient(circle, #e0a316 0%, #e0a316 41%, #211802 77%, #211802 100%) !important;
  -webkit-animation: none !important;
          animation: none !important;
}

input#space:checked ~ .wheatley.space {
  bottom: calc(100% + 15em);
  left: calc(100% + 15em);
  transition: 3s linear all;
}

input#happy:checked ~ .wheatley .wheatley-inner {
  transform: rotate(-10deg);
}
input#happy:checked ~ .wheatley .eye-ring {
  transform: translate(0%, -10%);
}
input#happy:checked ~ .wheatley .track {
  transform: translate(-50%, -60%);
}
input#happy:checked ~ .wheatley .eye:after {
  bottom: -10%;
}
input#happy:checked ~ .wheatley .arm.top {
  height: 5em;
}
input#happy:checked ~ .wheatley .arm.bottom {
  height: 1em;
}

input#sad:checked ~ .wheatley .track {
  transform: translate(-50%, -45%);
}
input#sad:checked ~ .wheatley .eye-inner {
  top: 10%;
}
input#sad:checked ~ .wheatley .eye:before {
  top: -10%;
}
input#sad:checked ~ .wheatley .eye-ring {
  transform: translate(0%, 10%);
}
input#sad:checked ~ .wheatley .eye-ring i {
  transform: translate(0%, 20%);
}
input#sad:checked ~ .wheatley .arm.top {
  height: 1em;
}
input#sad:checked ~ .wheatley .arm.bottom {
  height: 5em;
}

input#angry:checked ~ .wheatley .wheatley-inner {
  -webkit-animation: shake 0.1s infinite ease;
          animation: shake 0.1s infinite ease;
}
input#angry:checked ~ .wheatley .eye:before {
  top: -10%;
}
input#angry:checked ~ .wheatley .eye:after {
  bottom: -10%;
}
input#angry:checked ~ .wheatley .arm {
  height: 2em;
}

input#thinking:checked ~ .wheatley .wheatley-inner {
  transform: rotate(10deg);
}
input#thinking:checked ~ .wheatley .eye-ring {
  transform: translate(-10%, -10%) rotate(10deg);
}
input#thinking:checked ~ .wheatley .eye-ring i {
  transform: translate(-10%, -10%);
}
input#thinking:checked ~ .wheatley .track {
  transform: translate(-50%, -55%);
}
input#thinking:checked ~ .wheatley .arm.bottom {
  height: 1em;
}

input#shocked:checked ~ .wheatley .eye:before {
  top: -50%;
}
input#shocked:checked ~ .wheatley .eye:after {
  bottom: -50%;
}
input#shocked:checked ~ .wheatley .arm {
  height: 6em;
}

@-webkit-keyframes float {
  0% {
    transform: translate(0%, -5%);
  }
  50% {
    transform: translate(0%, 5%);
  }
  100% {
    transform: translate(0%, -5%);
  }
}

@keyframes float {
  0% {
    transform: translate(0%, -5%);
  }
  50% {
    transform: translate(0%, 5%);
  }
  100% {
    transform: translate(0%, -5%);
  }
}
@-webkit-keyframes shake {
  0% {
    transform: translate(-1%, 0%);
  }
  50% {
    transform: translate(1%, 0%);
  }
  100% {
    transform: translate(-1%, 0%);
  }
}
@keyframes shake {
  0% {
    transform: translate(-1%, 0%);
  }
  50% {
    transform: translate(1%, 0%);
  }
  100% {
    transform: translate(-1%, 0%);
  }
}
@-webkit-keyframes rock {
  0% {
    transform: rotate(-5deg);
  }
  50% {
    transform: rotate(5deg);
  }
  100% {
    transform: rotate(-5deg);
  }
}
@keyframes rock {
  0% {
    transform: rotate(-5deg);
  }
  50% {
    transform: rotate(5deg);
  }
  100% {
    transform: rotate(-5deg);
  }
}
@-webkit-keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
} */



.selectLang {
  background-color: rgb(126, 126, 126);
  border-color: rgba(20, 20, 20, 0.801);
  border-radius: 25px;
  font-size:medium;
}
.selectLang:hover {
  color: rgba(0, 0, 0, 0.733);
}




#menu__toggle {
  opacity: 0;
}
#menu__toggle:checked ~ .menu__btn > span {
  transform: rotate(45deg);
}
#menu__toggle:checked ~ .menu__btn > span::before {
  top: 0;
  transform: rotate(0);
}
#menu__toggle:checked ~ .menu__btn > span::after {
  top: 0;
  transform: rotate(90deg);
}
#menu__toggle:checked ~ .menu__box {
  visibility: visible;
  left: 85%;
}

.menu__btn {
  display: flex;
  align-items: center;
  position: fixed;
  top: -20%;
  right: 20px;
  width: 26px;
  height: 26px;
  cursor: pointer;
  z-index: 2;
}


.menu__btn > span,
.menu__btn > span::before,
.menu__btn > span::after {
  display: block;
  position: absolute;
  width: 100%;
  height: 2px;
  background-color: #616161;
  transition-duration: .65s;
}

.menu__btn > span::before {
  content: '';
  top: -8px;
}
.menu__btn > span::after {
  content: '';
  top: 8px;
}

.menu__box {
  display: block;
  position: relative;
  visibility: hidden;
  top: -20px;
  left: 130%;
  width: 15%;
  height: 45%;
  border-radius: 8%;
  margin: 0;
  padding: 50px 10px;
  list-style: none;
  background-color: #858585e7;
  box-shadow: 1px 0px 6px rgba(0, 0, 0, .2);
  transition-duration: .35s;
}


.menu__item {
  display: block;
  padding: 12px 24px;
  color: #333;
  font-family: 'Roboto', sans-serif;
  font-size: 20px;
  font-weight: 600;
  text-decoration: none;
  transition-duration: .25s;
}
.menu__item:hover {
  background-color: #292929;
  color: rgb(226, 226, 226);
}





#music {
  visibility: hidden;
}
#musicLogo {
  position: absolute;
  margin-top: -18%;
  margin-left: 72.5%;
  font-size: 30px;
  color: rgba(165, 165, 165, 0.753);
  position: fixed;
  cursor: pointer;
  z-index: 2;
}
#music:checked ~ .menu__box2 {
  visibility: visible;
  top: -33%;
}

.menu__box2 {
  display: block;
  position: relative;
  visibility: hidden;
  top: -250%;
  left: 65%;
  width: 300px;
  height: 450px;
  border-radius: 5%;
  margin: 0;
  padding: 15px 0;
  list-style: none;
  background-color: #535353c4;
  box-shadow: 5px 0px 8px rgba(0, 0, 0, 0.856);
  transition-duration: .4s;
}


.audio {
  block-size: 50px;
}






input[type="checkbox"]{
	-webkit-appearance: none;
	visibility: hidden;
	display: none;
}

.tick{
	position: relative;
  left: 20px;
	display: inline-block;
	width: 60px;
	height: 30px;
	background: #313131;
	cursor: pointer;
	border-radius: 20px;
	overflow: hidden;
	transition: ease-in .5s;
}

input[type="checkbox"]:checked ~ .tick{
	background: #fff;
}

/******* Before Start *******/

.tick:before{
	content: '';
	position: absolute;
	top: 2px;
	left: 2px;
	background: #fff;
	width: 26px;
	height: 26px;
	border-radius: 50%;
	transition: .2s;
	transform: translateX(0px);
}

input[type="checkbox"]:checked ~ .tick:before{
	transform: translateX(70px);
}

/******* Before End *******/
/******* After Start *******/

.tick:after{
	content: '';
	position: absolute;
	top: 2px;
	right: 2px;
	background: #313131;
	width: 26px;
	height: 26px;
	border-radius: 50%;
	transition: .2s;
	transform: translateX(-40px);
}

input[type="checkbox"]:checked ~ .tick:after{
	transform: translateX(0px);
}





#ratting {
  visibility: hidden;
}

#rattingLogo:hover  {
  cursor: pointer;
}

#ratting:checked ~ .rattingConta {
  visibility: visible;
}

.rattingConta {
  visibility: hidden;
}



#crossClose {
  position: relative;
  top: -13%;
  left: 92%;
  font-size: x-large;
  z-index: 3;
}
#crossClose:hover  {
  cursor: pointer;
}




.rattingConta {
  background-image: url("https://www.toptal.com/designers/subtlepatterns/patterns/concrete-texture.png");
  display: flex;
  flex-wrap: wrap;
  height: 100vh;
  align-items: center;
  justify-content: center;
  padding: 0 20px;
  position: absolute;
  margin-top: -90%;
  margin-left: -340%;
}

.rating {
  display: flex;
  width: 100%;
  justify-content: center;
  overflow: hidden;
  flex-direction: row-reverse;
  height: 150px;
  position: relative;
}

.rating-0 {
  filter: grayscale(100%);
}

.rating > input {
  display: none;
}

.rating > label {
  cursor: pointer;
  width: 70px;
  height: 50px;
  margin-top: auto;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' width='126.729' height='126.73'%3e%3cpath fill='%23e3e3e3' d='M121.215 44.212l-34.899-3.3c-2.2-.2-4.101-1.6-5-3.7l-12.5-30.3c-2-5-9.101-5-11.101 0l-12.4 30.3c-.8 2.1-2.8 3.5-5 3.7l-34.9 3.3c-5.2.5-7.3 7-3.4 10.5l26.3 23.1c1.7 1.5 2.4 3.7 1.9 5.9l-7.9 32.399c-1.2 5.101 4.3 9.3 8.9 6.601l29.1-17.101c1.9-1.1 4.2-1.1 6.1 0l29.101 17.101c4.6 2.699 10.1-1.4 8.899-6.601l-7.8-32.399c-.5-2.2.2-4.4 1.9-5.9l26.3-23.1c3.8-3.5 1.6-10-3.6-10.5z'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: center;
  background-size: 76%;
  transition: 0.3s;
}

.rating > input:checked ~ label,
.rating > input:checked ~ label ~ label {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' width='126.729' height='126.73'%3e%3cpath fill='%23fcd93a' d='M121.215 44.212l-34.899-3.3c-2.2-.2-4.101-1.6-5-3.7l-12.5-30.3c-2-5-9.101-5-11.101 0l-12.4 30.3c-.8 2.1-2.8 3.5-5 3.7l-34.9 3.3c-5.2.5-7.3 7-3.4 10.5l26.3 23.1c1.7 1.5 2.4 3.7 1.9 5.9l-7.9 32.399c-1.2 5.101 4.3 9.3 8.9 6.601l29.1-17.101c1.9-1.1 4.2-1.1 6.1 0l29.101 17.101c4.6 2.699 10.1-1.4 8.899-6.601l-7.8-32.399c-.5-2.2.2-4.4 1.9-5.9l26.3-23.1c3.8-3.5 1.6-10-3.6-10.5z'/%3e%3c/svg%3e");
}

.rating > input:not(:checked) ~ label:hover,
.rating > input:not(:checked) ~ label:hover ~ label {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' width='126.729' height='126.73'%3e%3cpath fill='%23d8b11e' d='M121.215 44.212l-34.899-3.3c-2.2-.2-4.101-1.6-5-3.7l-12.5-30.3c-2-5-9.101-5-11.101 0l-12.4 30.3c-.8 2.1-2.8 3.5-5 3.7l-34.9 3.3c-5.2.5-7.3 7-3.4 10.5l26.3 23.1c1.7 1.5 2.4 3.7 1.9 5.9l-7.9 32.399c-1.2 5.101 4.3 9.3 8.9 6.601l29.1-17.101c1.9-1.1 4.2-1.1 6.1 0l29.101 17.101c4.6 2.699 10.1-1.4 8.899-6.601l-7.8-32.399c-.5-2.2.2-4.4 1.9-5.9l26.3-23.1c3.8-3.5 1.6-10-3.6-10.5z'/%3e%3c/svg%3e");
}

.emoji-wrapper {
  width: 100%;
  text-align: center;
  height: 100px;
  overflow: hidden;
  position: absolute;
  top: 0;
  left: 0;
}

.emoji-wrapper:before,
.emoji-wrapper:after {
  content: "";
  height: 15px;
  width: 100%;
  position: absolute;
  left: 0;
  z-index: 1;
}

.emoji-wrapper:before {
  top: 0;
  background: linear-gradient(to bottom, white 0%, white 35%, rgba(255, 255, 255, 0) 100%);
}

.emoji-wrapper:after {
  bottom: 0;
  background: linear-gradient(to top, white 0%, white 35%, rgba(255, 255, 255, 0) 100%);
}

.emoji {
  display: flex;
  flex-direction: column;
  align-items: center;
  transition: 0.3s;
}

.emoji > svg {
  margin: 15px 0;
  width: 70px;
  height: 70px;
  flex-shrink: 0;
}

#rating-1:checked ~ .emoji-wrapper > .emoji {
  transform: translateY(-100px);
}

#rating-2:checked ~ .emoji-wrapper > .emoji {
  transform: translateY(-200px);
}

#rating-3:checked ~ .emoji-wrapper > .emoji {
  transform: translateY(-300px);
}

#rating-4:checked ~ .emoji-wrapper > .emoji {
  transform: translateY(-400px);
}

#rating-5:checked ~ .emoji-wrapper > .emoji {
  transform: translateY(-500px);
}

.feedback {
  max-width: 360px;
  background-color: #fff;
  width: 100%;
  padding: 30px;
  border-radius: 8px;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: center;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.05);
}





.textBarre {
  border-right: solid 3px rgba(0, 255, 0, 0.911);
  white-space: nowrap;
  overflow: hidden;    
  font-family: 'Source Code Pro', monospace;  
  font-size: 80px;
  color: rgba(255, 255, 255, 0.932);
  margin: -33% 41%;
}

/* Animation */
.textBarre {
  animation: animated-text 2s steps(30,end) 1s 1 normal both,
             animated-cursor 600ms steps(30,end) infinite;
}

/* text animation */
@keyframes animated-text{
  from{width: 0;}
  to{width: 310px;}
}

/* cursor animations */
@keyframes animated-cursor{
  from{border-right-color: rgba(0,255,0,.75);}
  to{border-right-color: transparent;}
}





/* responsive website */
@media screen and (max-width: 1600px){
  #musicLogo {
    margin-top: -23%;
  }
  #music:checked ~ .menu__box2 {
    top: -35%;
  }

  #bordure {
    margin-top: -43%;
    margin-left: 35%;
  }
  .paint {
    margin: -38% 42%;
  }
  .snake {
      margin: -33% 42%;
  }
  .pong {
    margin: -28% 42%;
  }
  .game2048 {
    margin: -23% 42%;
  }
  #paint {
    margin: -37.8% 39.5%;
  }
  #snake {
    margin: -32.8% 39.5%;
  }
  #pong {
    margin: -27.8% 39.5%;
  }
  #game2048 {
    margin: -22.8% 39.5%;
  }
}

@media screen and (max-width: 1300px){
  #musicLogo {
    margin-top: -28%;
  }
  #music:checked ~ .menu__box2 {
    left: 62%;
  }

  .menu__box {
    width: 20%;
    height: 45%;
  }
  #menu__toggle:checked ~ .menu__box {
    left: 80%;
  }

  .textBarre {
    margin: -48% 38%;
  }

  #bordure {
    margin-top: -53%;
    margin-left: 30%;
    width: 45%;
  }
  .paint {
    margin: -45% 42%;
  }
  .snake {
      margin: -38% 42%;
  }
  .pong {
    margin: -31% 42%;
  }
  .game2048 {
    margin: -24% 42%;
  }
  #paint {
    margin: -44.8% 39.5%;
  }
  #snake {
    margin: -37.8% 39.5%;
  }
  #pong {
    margin: -30.8% 39.5%;
  }
  #game2048 {
    margin: -23.8% 39.5%;
  }

  .reseaux {
    margin-top: -45%;
  }
  .reseaux li a {
    margin: 80px;
  }
}

@media screen and (max-width: 1000px){
  #musicLogo {
    margin-top: -37%;
    margin-left: 60%;
  }
  #music:checked ~ .menu__box2 {
    left: 46%;
  }
  .menu__box2 {
    left: 46%;
  }

  .menu__box {
    width: 25%;
  }
  #menu__toggle:checked ~ .menu__box {
    left: 75%;
  }

  .textBarre {
    margin: -60% 35%;
  }

  #scearch {
    margin: 2.3% 65%;
    width: 18%; height: 7mm;
  }
  #logo {
    width: 8%;
    margin-left: 85.5%;
    margin-top: 0%;
  }

  #bordure {
    margin-top: -68%;
    margin-left: 23%;
    width: 58%;
  }
  .paint {
    margin: -56% 38%;
  }
  .snake {
    margin: -48% 38%;
  }
  .pong {
    margin: -40% 38%;
  }
  .game2048 {
    margin: -32% 38%;
  }
  #paint {
    margin: -55.8% 34.5%;
  }
  #snake {
    margin: -47.8% 34.5%;
  }
  #pong {
    margin: -39.8% 34.5%;
  }
  #game2048 {
    margin: -31.8% 34.5%;
  }

  .reseaux {
    margin-top: -63%;
  }
  .reseaux li a {
    margin: 50px;
  }
}

@media screen and (max-width: 600px){
  #musicLogo {
    margin-top: -65%;
    margin-left: 60%;
  }
  #music:checked ~ .menu__box2 {
    left: 38%;
    top: -37%;
  }
  .menu__box2 {
    left: 38%;
  }

  .menu__box {
    width: 30%;
  }
  #menu__toggle:checked ~ .menu__box {
    left: 70%;
  }
  .menu__btn {
    top: -16%;
    right: 20px;
  }

  .textBarre {
    margin: -110% 25%;
  }

  #scearch {
    margin: 2.3% 70%;
    width: 18%; height: 7mm;
  }
  #logo {
    visibility: hidden;
  }

  main {
    height: 6%;
  }
  #accueil {
    width: 80px; height: 15mm;
    margin: 0px 0px;
  }
  #accueil2 {
    width: 80px; height: 15mm;
    margin: 0px 0px;
  }

  #jeux {
    width: 80px; height: 15mm;
    margin: 0px 80px;
  }
  #jeux2 {
    width: 80px; height: 15mm;
    margin: 0px 80px;
  }

  #projet {
    width: 80px; height: 15mm;
    margin: 0px 160px;
  }
  #projet2 {
    width: 80px; height: 15mm;
    margin: 0px 160px;
  }
  #contact {
    width: 80px; height: 15mm;
    margin: 0px 240px;
  }
  #contact2 {
    width: 80px; height: 15mm;
    margin: 0px 240px;
  }

  #bordure {
    margin-top: -110%;
    margin-left: 15%;
    width: 70%;
    height: 70%;
  }
  .paint {
    margin: -90% 33%;
  }
  .snake {
    margin: -78% 33%;
  }
  .pong {
    margin: -63% 33%;
  }
  .game2048 {
    margin: -48% 33%;
  }
  #paint {
    margin: -89.8% 28%;
  }
  #snake {
    margin: -77.8% 28%;
  }
  #pong {
    margin: -62.8% 28%;
  }
  #game2048 {
    margin: -47.8% 28%;
  }

  .reseaux {
    margin-top: -105%;
    margin-left: 5%;
  }
  .reseaux li a {
    width: 110px;
    height: 110px;
    margin: 15px;
  }
}

@media screen and (max-width: 500px){
  #scearch {
    visibility: hidden;
  }
  #musicLogo {
    visibility: hidden;
  }

  #bordure {
    margin-top: -140%;
    margin-left: 10%;
    width: 80%;
    height: 65%;
  }
  .paint {
    margin: -120% 33%;
  }
  .snake {
    margin: -100% 33%;
  }
  .pong {
    margin: -80% 33%;
  }
  .game2048 {
    margin: -60% 33%;
  }
  #paint {
    margin: -119.8% 28%;
  }
  #snake {
    margin: -99.8% 28%;
  }
  #pong {
    margin: -79.8% 28%;
  }
  #game2048 {
    margin: -59.8% 28%;
  }

  .reseaux {
    margin-top: -130%;
    margin-left: 5%;
  }
  .reseaux li a {
    width: 88px;
    height: 88px;
    margin: 10px;
  }
}
